/*
 * This file is generated by jOOQ.
 */
package DB.Tables;


import DB.Tables.tables.Calculationpolicys;
import DB.Tables.tables.Coachs;
import DB.Tables.tables.Events;
import DB.Tables.tables.EventsOnePlayer;
import DB.Tables.tables.EventsTime;
import DB.Tables.tables.EventsTwoPlayers;
import DB.Tables.tables.FanMatchesFollow;
import DB.Tables.tables.FanNotification;
import DB.Tables.tables.Fans;
import DB.Tables.tables.FieldsInSystem;
import DB.Tables.tables.Leagues;
import DB.Tables.tables.Matches;
import DB.Tables.tables.Players;
import DB.Tables.tables.RefereeNotification;
import DB.Tables.tables.RefereeSeasonLeague;
import DB.Tables.tables.Referees;
import DB.Tables.tables.RefereesMatches;
import DB.Tables.tables.Rfas;
import DB.Tables.tables.Schedulingpolicys;
import DB.Tables.tables.SeasonLeagueTeam;
import DB.Tables.tables.Seasons;
import DB.Tables.tables.TeamOwnerApprovedTeams;
import DB.Tables.tables.TeamOwnerRequests;
import DB.Tables.tables.TeamOwnerTeams;
import DB.Tables.tables.Teamroles;
import DB.Tables.tables.Teams;
import DB.Tables.tables.records.CalculationpolicysRecord;
import DB.Tables.tables.records.CoachsRecord;
import DB.Tables.tables.records.EventsOnePlayerRecord;
import DB.Tables.tables.records.EventsRecord;
import DB.Tables.tables.records.EventsTimeRecord;
import DB.Tables.tables.records.EventsTwoPlayersRecord;
import DB.Tables.tables.records.FanMatchesFollowRecord;
import DB.Tables.tables.records.FanNotificationRecord;
import DB.Tables.tables.records.FansRecord;
import DB.Tables.tables.records.FieldsInSystemRecord;
import DB.Tables.tables.records.LeaguesRecord;
import DB.Tables.tables.records.MatchesRecord;
import DB.Tables.tables.records.PlayersRecord;
import DB.Tables.tables.records.RefereeNotificationRecord;
import DB.Tables.tables.records.RefereeSeasonLeagueRecord;
import DB.Tables.tables.records.RefereesMatchesRecord;
import DB.Tables.tables.records.RefereesRecord;
import DB.Tables.tables.records.RfasRecord;
import DB.Tables.tables.records.SchedulingpolicysRecord;
import DB.Tables.tables.records.SeasonLeagueTeamRecord;
import DB.Tables.tables.records.SeasonsRecord;
import DB.Tables.tables.records.TeamOwnerApprovedTeamsRecord;
import DB.Tables.tables.records.TeamOwnerRequestsRecord;
import DB.Tables.tables.records.TeamOwnerTeamsRecord;
import DB.Tables.tables.records.TeamrolesRecord;
import DB.Tables.tables.records.TeamsRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>footballsystem_db</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CalculationpolicysRecord> KEY_CALCULATIONPOLICYS_PRIMARY = UniqueKeys0.KEY_CALCULATIONPOLICYS_PRIMARY;
    public static final UniqueKey<CoachsRecord> KEY_COACHS_PRIMARY = UniqueKeys0.KEY_COACHS_PRIMARY;
    public static final UniqueKey<EventsRecord> KEY_EVENTS_PRIMARY = UniqueKeys0.KEY_EVENTS_PRIMARY;
    public static final UniqueKey<EventsOnePlayerRecord> KEY_EVENTS_ONE_PLAYER_PRIMARY = UniqueKeys0.KEY_EVENTS_ONE_PLAYER_PRIMARY;
    public static final UniqueKey<EventsTimeRecord> KEY_EVENTS_TIME_PRIMARY = UniqueKeys0.KEY_EVENTS_TIME_PRIMARY;
    public static final UniqueKey<EventsTwoPlayersRecord> KEY_EVENTS_TWO_PLAYERS_PRIMARY = UniqueKeys0.KEY_EVENTS_TWO_PLAYERS_PRIMARY;
    public static final UniqueKey<FanMatchesFollowRecord> KEY_FAN_MATCHES_FOLLOW_PRIMARY = UniqueKeys0.KEY_FAN_MATCHES_FOLLOW_PRIMARY;
    public static final UniqueKey<FanNotificationRecord> KEY_FAN_NOTIFICATION_PRIMARY = UniqueKeys0.KEY_FAN_NOTIFICATION_PRIMARY;
    public static final UniqueKey<FansRecord> KEY_FANS_PRIMARY = UniqueKeys0.KEY_FANS_PRIMARY;
    public static final UniqueKey<FieldsInSystemRecord> KEY_FIELDS_IN_SYSTEM_PRIMARY = UniqueKeys0.KEY_FIELDS_IN_SYSTEM_PRIMARY;
    public static final UniqueKey<LeaguesRecord> KEY_LEAGUES_PRIMARY = UniqueKeys0.KEY_LEAGUES_PRIMARY;
    public static final UniqueKey<MatchesRecord> KEY_MATCHES_PRIMARY = UniqueKeys0.KEY_MATCHES_PRIMARY;
    public static final UniqueKey<PlayersRecord> KEY_PLAYERS_PRIMARY = UniqueKeys0.KEY_PLAYERS_PRIMARY;
    public static final UniqueKey<RefereeNotificationRecord> KEY_REFEREE_NOTIFICATION_PRIMARY = UniqueKeys0.KEY_REFEREE_NOTIFICATION_PRIMARY;
    public static final UniqueKey<RefereeSeasonLeagueRecord> KEY_REFEREE_SEASON_LEAGUE_PRIMARY = UniqueKeys0.KEY_REFEREE_SEASON_LEAGUE_PRIMARY;
    public static final UniqueKey<RefereesRecord> KEY_REFEREES_PRIMARY = UniqueKeys0.KEY_REFEREES_PRIMARY;
    public static final UniqueKey<RefereesMatchesRecord> KEY_REFEREES_MATCHES_PRIMARY = UniqueKeys0.KEY_REFEREES_MATCHES_PRIMARY;
    public static final UniqueKey<RfasRecord> KEY_RFAS_PRIMARY = UniqueKeys0.KEY_RFAS_PRIMARY;
    public static final UniqueKey<SchedulingpolicysRecord> KEY_SCHEDULINGPOLICYS_PRIMARY = UniqueKeys0.KEY_SCHEDULINGPOLICYS_PRIMARY;
    public static final UniqueKey<SeasonLeagueTeamRecord> KEY_SEASON_LEAGUE_TEAM_PRIMARY = UniqueKeys0.KEY_SEASON_LEAGUE_TEAM_PRIMARY;
    public static final UniqueKey<SeasonsRecord> KEY_SEASONS_PRIMARY = UniqueKeys0.KEY_SEASONS_PRIMARY;
    public static final UniqueKey<TeamOwnerApprovedTeamsRecord> KEY_TEAM_OWNER_APPROVED_TEAMS_PRIMARY = UniqueKeys0.KEY_TEAM_OWNER_APPROVED_TEAMS_PRIMARY;
    public static final UniqueKey<TeamOwnerRequestsRecord> KEY_TEAM_OWNER_REQUESTS_PRIMARY = UniqueKeys0.KEY_TEAM_OWNER_REQUESTS_PRIMARY;
    public static final UniqueKey<TeamOwnerTeamsRecord> KEY_TEAM_OWNER_TEAMS_PRIMARY = UniqueKeys0.KEY_TEAM_OWNER_TEAMS_PRIMARY;
    public static final UniqueKey<TeamrolesRecord> KEY_TEAMROLES_PRIMARY = UniqueKeys0.KEY_TEAMROLES_PRIMARY;
    public static final UniqueKey<TeamsRecord> KEY_TEAMS_PRIMARY = UniqueKeys0.KEY_TEAMS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CoachsRecord, FansRecord> FK_COACHS_FANS = ForeignKeys0.FK_COACHS_FANS;
    public static final ForeignKey<CoachsRecord, TeamsRecord> FK_COACHS_TEAMS = ForeignKeys0.FK_COACHS_TEAMS;
    public static final ForeignKey<EventsRecord, RefereesRecord> FK_EVENTS2_REFEREES = ForeignKeys0.FK_EVENTS2_REFEREES;
    public static final ForeignKey<EventsRecord, MatchesRecord> FK_EVENTS_MATCHES = ForeignKeys0.FK_EVENTS_MATCHES;
    public static final ForeignKey<EventsOnePlayerRecord, EventsRecord> FK_EVENTS_ONE_PLAYER_EVENTS = ForeignKeys0.FK_EVENTS_ONE_PLAYER_EVENTS;
    public static final ForeignKey<EventsOnePlayerRecord, PlayersRecord> FK_EVENTS_ONE_PLAYER_PLAYERS = ForeignKeys0.FK_EVENTS_ONE_PLAYER_PLAYERS;
    public static final ForeignKey<EventsTimeRecord, EventsRecord> FK_EVENTS_TIME_EVENTS = ForeignKeys0.FK_EVENTS_TIME_EVENTS;
    public static final ForeignKey<EventsTwoPlayersRecord, EventsRecord> FK_EVENTS_TWO_PLAYERS_EVENTS = ForeignKeys0.FK_EVENTS_TWO_PLAYERS_EVENTS;
    public static final ForeignKey<EventsTwoPlayersRecord, PlayersRecord> FK_EVENTS_TWO_PLAYERS_PLAYERS = ForeignKeys0.FK_EVENTS_TWO_PLAYERS_PLAYERS;
    public static final ForeignKey<EventsTwoPlayersRecord, PlayersRecord> FK_EVENTS_TWO_PLAYERS_PLAYERS_2 = ForeignKeys0.FK_EVENTS_TWO_PLAYERS_PLAYERS_2;
    public static final ForeignKey<FanMatchesFollowRecord, FansRecord> FK_FAN_MATCHES_FOLLOW_FANS = ForeignKeys0.FK_FAN_MATCHES_FOLLOW_FANS;
    public static final ForeignKey<FanMatchesFollowRecord, MatchesRecord> FK_FAN_MATCHES_FOLLOW_MATCHES = ForeignKeys0.FK_FAN_MATCHES_FOLLOW_MATCHES;
    public static final ForeignKey<FanNotificationRecord, FanMatchesFollowRecord> FK_FAN_NOTIFICATION_FAN_MATCHES_FOLLOW_2 = ForeignKeys0.FK_FAN_NOTIFICATION_FAN_MATCHES_FOLLOW_2;
    public static final ForeignKey<FanNotificationRecord, EventsRecord> FK_FAN_NOTIFICATION_EVENTS = ForeignKeys0.FK_FAN_NOTIFICATION_EVENTS;
    public static final ForeignKey<MatchesRecord, TeamsRecord> FK_MATCHES_TEAMS = ForeignKeys0.FK_MATCHES_TEAMS;
    public static final ForeignKey<MatchesRecord, TeamsRecord> FK_MATCHES_TEAMS_2 = ForeignKeys0.FK_MATCHES_TEAMS_2;
    public static final ForeignKey<MatchesRecord, FieldsInSystemRecord> FK_MATCHES_FIELDS = ForeignKeys0.FK_MATCHES_FIELDS;
    public static final ForeignKey<MatchesRecord, RefereesRecord> FK_MATCHES_REFEREES = ForeignKeys0.FK_MATCHES_REFEREES;
    public static final ForeignKey<PlayersRecord, FansRecord> FK_PLAYERS_FANS = ForeignKeys0.FK_PLAYERS_FANS;
    public static final ForeignKey<PlayersRecord, TeamsRecord> FK_PLAYERS_TEAMS = ForeignKeys0.FK_PLAYERS_TEAMS;
    public static final ForeignKey<RefereeNotificationRecord, RefereesMatchesRecord> FK_REFEREE_NOTIFICATION_REFEREES_MATCHES = ForeignKeys0.FK_REFEREE_NOTIFICATION_REFEREES_MATCHES;
    public static final ForeignKey<RefereeSeasonLeagueRecord, RefereesRecord> FK_REFEREE_SEASON_LEAGUE_REFEREES = ForeignKeys0.FK_REFEREE_SEASON_LEAGUE_REFEREES;
    public static final ForeignKey<RefereeSeasonLeagueRecord, SeasonsRecord> FK_REFEREE_SEASON_LEAGUE_SEASONS = ForeignKeys0.FK_REFEREE_SEASON_LEAGUE_SEASONS;
    public static final ForeignKey<RefereeSeasonLeagueRecord, LeaguesRecord> FK_REFEREE_SEASON_LEAGUE_LEAGUES = ForeignKeys0.FK_REFEREE_SEASON_LEAGUE_LEAGUES;
    public static final ForeignKey<RefereesRecord, FansRecord> FK_REFEREES_FANS = ForeignKeys0.FK_REFEREES_FANS;
    public static final ForeignKey<RefereesMatchesRecord, MatchesRecord> FK_REFEREES_MATCHES_MATCHES = ForeignKeys0.FK_REFEREES_MATCHES_MATCHES;
    public static final ForeignKey<RefereesMatchesRecord, FansRecord> FK_REFEREES_MATCHES_FANS = ForeignKeys0.FK_REFEREES_MATCHES_FANS;
    public static final ForeignKey<RfasRecord, FansRecord> FK_RFAS_FANS = ForeignKeys0.FK_RFAS_FANS;
    public static final ForeignKey<SeasonLeagueTeamRecord, SeasonsRecord> FK_SEASON_LEAGUE_TEAM_SEASONS = ForeignKeys0.FK_SEASON_LEAGUE_TEAM_SEASONS;
    public static final ForeignKey<SeasonLeagueTeamRecord, LeaguesRecord> FK_SEASON_LEAGUE_TEAM_LEAGUES = ForeignKeys0.FK_SEASON_LEAGUE_TEAM_LEAGUES;
    public static final ForeignKey<SeasonLeagueTeamRecord, TeamsRecord> FK_SEASON_LEAGUE_TEAM_TEAMS = ForeignKeys0.FK_SEASON_LEAGUE_TEAM_TEAMS;
    public static final ForeignKey<SeasonsRecord, SchedulingpolicysRecord> FK__SCHEDULINGPOLICYS = ForeignKeys0.FK__SCHEDULINGPOLICYS;
    public static final ForeignKey<SeasonsRecord, CalculationpolicysRecord> FK_SEASONS_CALCULATIONPOLICYS = ForeignKeys0.FK_SEASONS_CALCULATIONPOLICYS;
    public static final ForeignKey<TeamOwnerApprovedTeamsRecord, FansRecord> FK_TEAM_OWNER_APPROVED_TEAMS_FANS = ForeignKeys0.FK_TEAM_OWNER_APPROVED_TEAMS_FANS;
    public static final ForeignKey<TeamOwnerRequestsRecord, FansRecord> FK_TEAMOWNER_REQUESTS_FANS = ForeignKeys0.FK_TEAMOWNER_REQUESTS_FANS;
    public static final ForeignKey<TeamOwnerTeamsRecord, FansRecord> FK_TEAM_OWNER_TEAMS_FANS = ForeignKeys0.FK_TEAM_OWNER_TEAMS_FANS;
    public static final ForeignKey<TeamOwnerTeamsRecord, TeamsRecord> FK_TEAM_OWNER_TEAMS_TEAMS = ForeignKeys0.FK_TEAM_OWNER_TEAMS_TEAMS;
    public static final ForeignKey<TeamrolesRecord, FansRecord> FK_TEAMROLES_FANS = ForeignKeys0.FK_TEAMROLES_FANS;
    public static final ForeignKey<TeamsRecord, FansRecord> FK_TEAMS_FANS_2 = ForeignKeys0.FK_TEAMS_FANS_2;
    public static final ForeignKey<TeamsRecord, FansRecord> FK_TEAMS_FANS_3 = ForeignKeys0.FK_TEAMS_FANS_3;
    public static final ForeignKey<TeamsRecord, FieldsInSystemRecord> FK_TEAMS_FIELDS = ForeignKeys0.FK_TEAMS_FIELDS;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<CalculationpolicysRecord> KEY_CALCULATIONPOLICYS_PRIMARY = Internal.createUniqueKey(Calculationpolicys.CALCULATIONPOLICYS, "KEY_calculationpolicys_PRIMARY", new TableField[] { Calculationpolicys.CALCULATIONPOLICYS.NAME }, true);
        public static final UniqueKey<CoachsRecord> KEY_COACHS_PRIMARY = Internal.createUniqueKey(Coachs.COACHS, "KEY_coachs_PRIMARY", new TableField[] { Coachs.COACHS.USERNAME }, true);
        public static final UniqueKey<EventsRecord> KEY_EVENTS_PRIMARY = Internal.createUniqueKey(Events.EVENTS, "KEY_events_PRIMARY", new TableField[] { Events.EVENTS.EVENT_ID }, true);
        public static final UniqueKey<EventsOnePlayerRecord> KEY_EVENTS_ONE_PLAYER_PRIMARY = Internal.createUniqueKey(EventsOnePlayer.EVENTS_ONE_PLAYER, "KEY_events_one_player_PRIMARY", new TableField[] { EventsOnePlayer.EVENTS_ONE_PLAYER.EVENT_ID }, true);
        public static final UniqueKey<EventsTimeRecord> KEY_EVENTS_TIME_PRIMARY = Internal.createUniqueKey(EventsTime.EVENTS_TIME, "KEY_events_time_PRIMARY", new TableField[] { EventsTime.EVENTS_TIME.EVENT_ID }, true);
        public static final UniqueKey<EventsTwoPlayersRecord> KEY_EVENTS_TWO_PLAYERS_PRIMARY = Internal.createUniqueKey(EventsTwoPlayers.EVENTS_TWO_PLAYERS, "KEY_events_two_players_PRIMARY", new TableField[] { EventsTwoPlayers.EVENTS_TWO_PLAYERS.EVENT_ID }, true);
        public static final UniqueKey<FanMatchesFollowRecord> KEY_FAN_MATCHES_FOLLOW_PRIMARY = Internal.createUniqueKey(FanMatchesFollow.FAN_MATCHES_FOLLOW, "KEY_fan_matches_follow_PRIMARY", new TableField[] { FanMatchesFollow.FAN_MATCHES_FOLLOW.USER_NAME, FanMatchesFollow.FAN_MATCHES_FOLLOW.MATCH_DATE, FanMatchesFollow.FAN_MATCHES_FOLLOW.HOME_TEAM, FanMatchesFollow.FAN_MATCHES_FOLLOW.AWAY_TEAM }, true);
        public static final UniqueKey<FanNotificationRecord> KEY_FAN_NOTIFICATION_PRIMARY = Internal.createUniqueKey(FanNotification.FAN_NOTIFICATION, "KEY_fan_notification_PRIMARY", new TableField[] { FanNotification.FAN_NOTIFICATION.MATCH_DATE, FanNotification.FAN_NOTIFICATION.HOME_TEAM, FanNotification.FAN_NOTIFICATION.AWAY_TEAM, FanNotification.FAN_NOTIFICATION.USERNAME, FanNotification.FAN_NOTIFICATION.EVENT_ID }, true);
        public static final UniqueKey<FansRecord> KEY_FANS_PRIMARY = Internal.createUniqueKey(Fans.FANS, "KEY_fans_PRIMARY", new TableField[] { Fans.FANS.USERNAME }, true);
        public static final UniqueKey<FieldsInSystemRecord> KEY_FIELDS_IN_SYSTEM_PRIMARY = Internal.createUniqueKey(FieldsInSystem.FIELDS_IN_SYSTEM, "KEY_fields_in_system_PRIMARY", new TableField[] { FieldsInSystem.FIELDS_IN_SYSTEM.NAME }, true);
        public static final UniqueKey<LeaguesRecord> KEY_LEAGUES_PRIMARY = Internal.createUniqueKey(Leagues.LEAGUES, "KEY_leagues_PRIMARY", new TableField[] { Leagues.LEAGUES.NAME }, true);
        public static final UniqueKey<MatchesRecord> KEY_MATCHES_PRIMARY = Internal.createUniqueKey(Matches.MATCHES, "KEY_matches_PRIMARY", new TableField[] { Matches.MATCHES.DATE, Matches.MATCHES.HOME_TEAM, Matches.MATCHES.AWAY_TEAM }, true);
        public static final UniqueKey<PlayersRecord> KEY_PLAYERS_PRIMARY = Internal.createUniqueKey(Players.PLAYERS, "KEY_players_PRIMARY", new TableField[] { Players.PLAYERS.USERNAME }, true);
        public static final UniqueKey<RefereeNotificationRecord> KEY_REFEREE_NOTIFICATION_PRIMARY = Internal.createUniqueKey(RefereeNotification.REFEREE_NOTIFICATION, "KEY_referee_notification_PRIMARY", new TableField[] { RefereeNotification.REFEREE_NOTIFICATION.MATCH_DATE, RefereeNotification.REFEREE_NOTIFICATION.HOME_TEAM, RefereeNotification.REFEREE_NOTIFICATION.AWAY_TEAM, RefereeNotification.REFEREE_NOTIFICATION.REFEREE, RefereeNotification.REFEREE_NOTIFICATION.NOTIFICATION_CONTENT }, true);
        public static final UniqueKey<RefereeSeasonLeagueRecord> KEY_REFEREE_SEASON_LEAGUE_PRIMARY = Internal.createUniqueKey(RefereeSeasonLeague.REFEREE_SEASON_LEAGUE, "KEY_referee_season_league_PRIMARY", new TableField[] { RefereeSeasonLeague.REFEREE_SEASON_LEAGUE.REFEREE, RefereeSeasonLeague.REFEREE_SEASON_LEAGUE.SEASON_YEAR, RefereeSeasonLeague.REFEREE_SEASON_LEAGUE.LEAGUE_NAME }, true);
        public static final UniqueKey<RefereesRecord> KEY_REFEREES_PRIMARY = Internal.createUniqueKey(Referees.REFEREES, "KEY_referees_PRIMARY", new TableField[] { Referees.REFEREES.USERNAME }, true);
        public static final UniqueKey<RefereesMatchesRecord> KEY_REFEREES_MATCHES_PRIMARY = Internal.createUniqueKey(RefereesMatches.REFEREES_MATCHES, "KEY_referees_matches_PRIMARY", new TableField[] { RefereesMatches.REFEREES_MATCHES.MATCHE_DATE, RefereesMatches.REFEREES_MATCHES.HOME_TEAM, RefereesMatches.REFEREES_MATCHES.AWAY_TEAM, RefereesMatches.REFEREES_MATCHES.REFEREE }, true);
        public static final UniqueKey<RfasRecord> KEY_RFAS_PRIMARY = Internal.createUniqueKey(Rfas.RFAS, "KEY_rfas_PRIMARY", new TableField[] { Rfas.RFAS.USERNAME }, true);
        public static final UniqueKey<SchedulingpolicysRecord> KEY_SCHEDULINGPOLICYS_PRIMARY = Internal.createUniqueKey(Schedulingpolicys.SCHEDULINGPOLICYS, "KEY_schedulingpolicys_PRIMARY", new TableField[] { Schedulingpolicys.SCHEDULINGPOLICYS.NAME }, true);
        public static final UniqueKey<SeasonLeagueTeamRecord> KEY_SEASON_LEAGUE_TEAM_PRIMARY = Internal.createUniqueKey(SeasonLeagueTeam.SEASON_LEAGUE_TEAM, "KEY_season_league_team_PRIMARY", new TableField[] { SeasonLeagueTeam.SEASON_LEAGUE_TEAM.SEASON_YEAR, SeasonLeagueTeam.SEASON_LEAGUE_TEAM.LEAGUE_NAME, SeasonLeagueTeam.SEASON_LEAGUE_TEAM.TEAM_NAME }, true);
        public static final UniqueKey<SeasonsRecord> KEY_SEASONS_PRIMARY = Internal.createUniqueKey(Seasons.SEASONS, "KEY_seasons_PRIMARY", new TableField[] { Seasons.SEASONS.YEAR }, true);
        public static final UniqueKey<TeamOwnerApprovedTeamsRecord> KEY_TEAM_OWNER_APPROVED_TEAMS_PRIMARY = Internal.createUniqueKey(TeamOwnerApprovedTeams.TEAM_OWNER_APPROVED_TEAMS, "KEY_team_owner_approved_teams_PRIMARY", new TableField[] { TeamOwnerApprovedTeams.TEAM_OWNER_APPROVED_TEAMS.TEAM_OWNER, TeamOwnerApprovedTeams.TEAM_OWNER_APPROVED_TEAMS.TEAM_NAME }, true);
        public static final UniqueKey<TeamOwnerRequestsRecord> KEY_TEAM_OWNER_REQUESTS_PRIMARY = Internal.createUniqueKey(TeamOwnerRequests.TEAM_OWNER_REQUESTS, "KEY_team_owner_requests_PRIMARY", new TableField[] { TeamOwnerRequests.TEAM_OWNER_REQUESTS.TEAM_OWNER, TeamOwnerRequests.TEAM_OWNER_REQUESTS.TEAM_NAME }, true);
        public static final UniqueKey<TeamOwnerTeamsRecord> KEY_TEAM_OWNER_TEAMS_PRIMARY = Internal.createUniqueKey(TeamOwnerTeams.TEAM_OWNER_TEAMS, "KEY_team_owner_teams_PRIMARY", new TableField[] { TeamOwnerTeams.TEAM_OWNER_TEAMS.TEAM_OWNER, TeamOwnerTeams.TEAM_OWNER_TEAMS.TEAM_NAME }, true);
        public static final UniqueKey<TeamrolesRecord> KEY_TEAMROLES_PRIMARY = Internal.createUniqueKey(Teamroles.TEAMROLES, "KEY_teamroles_PRIMARY", new TableField[] { Teamroles.TEAMROLES.USERNAME }, true);
        public static final UniqueKey<TeamsRecord> KEY_TEAMS_PRIMARY = Internal.createUniqueKey(Teams.TEAMS, "KEY_teams_PRIMARY", new TableField[] { Teams.TEAMS.TEAMNAME }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CoachsRecord, FansRecord> FK_COACHS_FANS = Internal.createForeignKey(Keys.KEY_FANS_PRIMARY, Coachs.COACHS, "FK_coachs_fans", new TableField[] { Coachs.COACHS.USERNAME }, true);
        public static final ForeignKey<CoachsRecord, TeamsRecord> FK_COACHS_TEAMS = Internal.createForeignKey(Keys.KEY_TEAMS_PRIMARY, Coachs.COACHS, "FK_coachs_teams", new TableField[] { Coachs.COACHS.COACHTEAM }, true);
        public static final ForeignKey<EventsRecord, RefereesRecord> FK_EVENTS2_REFEREES = Internal.createForeignKey(Keys.KEY_REFEREES_PRIMARY, Events.EVENTS, "FK_events2_referees", new TableField[] { Events.EVENTS.REFEREE }, true);
        public static final ForeignKey<EventsRecord, MatchesRecord> FK_EVENTS_MATCHES = Internal.createForeignKey(Keys.KEY_MATCHES_PRIMARY, Events.EVENTS, "FK_events_matches", new TableField[] { Events.EVENTS.MATCH_DATE, Events.EVENTS.HOME_TEAM_MATCH, Events.EVENTS.AWAY_TEAM_MATCH }, true);
        public static final ForeignKey<EventsOnePlayerRecord, EventsRecord> FK_EVENTS_ONE_PLAYER_EVENTS = Internal.createForeignKey(Keys.KEY_EVENTS_PRIMARY, EventsOnePlayer.EVENTS_ONE_PLAYER, "FK_events_one_player_events", new TableField[] { EventsOnePlayer.EVENTS_ONE_PLAYER.EVENT_ID }, true);
        public static final ForeignKey<EventsOnePlayerRecord, PlayersRecord> FK_EVENTS_ONE_PLAYER_PLAYERS = Internal.createForeignKey(Keys.KEY_PLAYERS_PRIMARY, EventsOnePlayer.EVENTS_ONE_PLAYER, "FK_events_one_player_players", new TableField[] { EventsOnePlayer.EVENTS_ONE_PLAYER.PLAYER1 }, true);
        public static final ForeignKey<EventsTimeRecord, EventsRecord> FK_EVENTS_TIME_EVENTS = Internal.createForeignKey(Keys.KEY_EVENTS_PRIMARY, EventsTime.EVENTS_TIME, "FK_events_time_events", new TableField[] { EventsTime.EVENTS_TIME.EVENT_ID }, true);
        public static final ForeignKey<EventsTwoPlayersRecord, EventsRecord> FK_EVENTS_TWO_PLAYERS_EVENTS = Internal.createForeignKey(Keys.KEY_EVENTS_PRIMARY, EventsTwoPlayers.EVENTS_TWO_PLAYERS, "FK_events_two_players_events", new TableField[] { EventsTwoPlayers.EVENTS_TWO_PLAYERS.EVENT_ID }, true);
        public static final ForeignKey<EventsTwoPlayersRecord, PlayersRecord> FK_EVENTS_TWO_PLAYERS_PLAYERS = Internal.createForeignKey(Keys.KEY_PLAYERS_PRIMARY, EventsTwoPlayers.EVENTS_TWO_PLAYERS, "FK_events_two_players_players", new TableField[] { EventsTwoPlayers.EVENTS_TWO_PLAYERS.PLAYER1 }, true);
        public static final ForeignKey<EventsTwoPlayersRecord, PlayersRecord> FK_EVENTS_TWO_PLAYERS_PLAYERS_2 = Internal.createForeignKey(Keys.KEY_PLAYERS_PRIMARY, EventsTwoPlayers.EVENTS_TWO_PLAYERS, "FK_events_two_players_players_2", new TableField[] { EventsTwoPlayers.EVENTS_TWO_PLAYERS.PLAYER2 }, true);
        public static final ForeignKey<FanMatchesFollowRecord, FansRecord> FK_FAN_MATCHES_FOLLOW_FANS = Internal.createForeignKey(Keys.KEY_FANS_PRIMARY, FanMatchesFollow.FAN_MATCHES_FOLLOW, "FK_fan_matches_follow_fans", new TableField[] { FanMatchesFollow.FAN_MATCHES_FOLLOW.USER_NAME }, true);
        public static final ForeignKey<FanMatchesFollowRecord, MatchesRecord> FK_FAN_MATCHES_FOLLOW_MATCHES = Internal.createForeignKey(Keys.KEY_MATCHES_PRIMARY, FanMatchesFollow.FAN_MATCHES_FOLLOW, "FK_fan_matches_follow_matches", new TableField[] { FanMatchesFollow.FAN_MATCHES_FOLLOW.MATCH_DATE, FanMatchesFollow.FAN_MATCHES_FOLLOW.HOME_TEAM, FanMatchesFollow.FAN_MATCHES_FOLLOW.AWAY_TEAM }, true);
        public static final ForeignKey<FanNotificationRecord, FanMatchesFollowRecord> FK_FAN_NOTIFICATION_FAN_MATCHES_FOLLOW_2 = Internal.createForeignKey(Keys.KEY_FAN_MATCHES_FOLLOW_PRIMARY, FanNotification.FAN_NOTIFICATION, "FK_fan_notification_fan_matches_follow_2", new TableField[] { FanNotification.FAN_NOTIFICATION.USERNAME }, true);
        public static final ForeignKey<FanNotificationRecord, EventsRecord> FK_FAN_NOTIFICATION_EVENTS = Internal.createForeignKey(Keys.KEY_EVENTS_PRIMARY, FanNotification.FAN_NOTIFICATION, "FK_fan-notification_events", new TableField[] { FanNotification.FAN_NOTIFICATION.EVENT_ID }, true);
        public static final ForeignKey<MatchesRecord, TeamsRecord> FK_MATCHES_TEAMS = Internal.createForeignKey(Keys.KEY_TEAMS_PRIMARY, Matches.MATCHES, "FK_matches_teams", new TableField[] { Matches.MATCHES.HOME_TEAM }, true);
        public static final ForeignKey<MatchesRecord, TeamsRecord> FK_MATCHES_TEAMS_2 = Internal.createForeignKey(Keys.KEY_TEAMS_PRIMARY, Matches.MATCHES, "FK_matches_teams_2", new TableField[] { Matches.MATCHES.AWAY_TEAM }, true);
        public static final ForeignKey<MatchesRecord, FieldsInSystemRecord> FK_MATCHES_FIELDS = Internal.createForeignKey(Keys.KEY_FIELDS_IN_SYSTEM_PRIMARY, Matches.MATCHES, "FK_matches_fields", new TableField[] { Matches.MATCHES.FIELD }, true);
        public static final ForeignKey<MatchesRecord, RefereesRecord> FK_MATCHES_REFEREES = Internal.createForeignKey(Keys.KEY_REFEREES_PRIMARY, Matches.MATCHES, "FK_matches_referees", new TableField[] { Matches.MATCHES.MAIN_REFEREE }, true);
        public static final ForeignKey<PlayersRecord, FansRecord> FK_PLAYERS_FANS = Internal.createForeignKey(Keys.KEY_FANS_PRIMARY, Players.PLAYERS, "FK_players_fans", new TableField[] { Players.PLAYERS.USERNAME }, true);
        public static final ForeignKey<PlayersRecord, TeamsRecord> FK_PLAYERS_TEAMS = Internal.createForeignKey(Keys.KEY_TEAMS_PRIMARY, Players.PLAYERS, "FK_players_teams", new TableField[] { Players.PLAYERS.PLAYERTEAMNAME }, true);
        public static final ForeignKey<RefereeNotificationRecord, RefereesMatchesRecord> FK_REFEREE_NOTIFICATION_REFEREES_MATCHES = Internal.createForeignKey(Keys.KEY_REFEREES_MATCHES_PRIMARY, RefereeNotification.REFEREE_NOTIFICATION, "FK_referee_notification_referees_matches", new TableField[] { RefereeNotification.REFEREE_NOTIFICATION.MATCH_DATE, RefereeNotification.REFEREE_NOTIFICATION.HOME_TEAM, RefereeNotification.REFEREE_NOTIFICATION.AWAY_TEAM }, true);
        public static final ForeignKey<RefereeSeasonLeagueRecord, RefereesRecord> FK_REFEREE_SEASON_LEAGUE_REFEREES = Internal.createForeignKey(Keys.KEY_REFEREES_PRIMARY, RefereeSeasonLeague.REFEREE_SEASON_LEAGUE, "FK_referee_season_league_referees", new TableField[] { RefereeSeasonLeague.REFEREE_SEASON_LEAGUE.REFEREE }, true);
        public static final ForeignKey<RefereeSeasonLeagueRecord, SeasonsRecord> FK_REFEREE_SEASON_LEAGUE_SEASONS = Internal.createForeignKey(Keys.KEY_SEASONS_PRIMARY, RefereeSeasonLeague.REFEREE_SEASON_LEAGUE, "FK_referee_season_league_seasons", new TableField[] { RefereeSeasonLeague.REFEREE_SEASON_LEAGUE.SEASON_YEAR }, true);
        public static final ForeignKey<RefereeSeasonLeagueRecord, LeaguesRecord> FK_REFEREE_SEASON_LEAGUE_LEAGUES = Internal.createForeignKey(Keys.KEY_LEAGUES_PRIMARY, RefereeSeasonLeague.REFEREE_SEASON_LEAGUE, "FK_referee_season_league_leagues", new TableField[] { RefereeSeasonLeague.REFEREE_SEASON_LEAGUE.LEAGUE_NAME }, true);
        public static final ForeignKey<RefereesRecord, FansRecord> FK_REFEREES_FANS = Internal.createForeignKey(Keys.KEY_FANS_PRIMARY, Referees.REFEREES, "FK_referees_fans", new TableField[] { Referees.REFEREES.USERNAME }, true);
        public static final ForeignKey<RefereesMatchesRecord, MatchesRecord> FK_REFEREES_MATCHES_MATCHES = Internal.createForeignKey(Keys.KEY_MATCHES_PRIMARY, RefereesMatches.REFEREES_MATCHES, "FK_referees_matches_matches", new TableField[] { RefereesMatches.REFEREES_MATCHES.MATCHE_DATE, RefereesMatches.REFEREES_MATCHES.HOME_TEAM, RefereesMatches.REFEREES_MATCHES.AWAY_TEAM }, true);
        public static final ForeignKey<RefereesMatchesRecord, FansRecord> FK_REFEREES_MATCHES_FANS = Internal.createForeignKey(Keys.KEY_FANS_PRIMARY, RefereesMatches.REFEREES_MATCHES, "FK_referees_matches_fans", new TableField[] { RefereesMatches.REFEREES_MATCHES.REFEREE }, true);
        public static final ForeignKey<RfasRecord, FansRecord> FK_RFAS_FANS = Internal.createForeignKey(Keys.KEY_FANS_PRIMARY, Rfas.RFAS, "FK_rfas_fans", new TableField[] { Rfas.RFAS.USERNAME }, true);
        public static final ForeignKey<SeasonLeagueTeamRecord, SeasonsRecord> FK_SEASON_LEAGUE_TEAM_SEASONS = Internal.createForeignKey(Keys.KEY_SEASONS_PRIMARY, SeasonLeagueTeam.SEASON_LEAGUE_TEAM, "FK_season_league_team_seasons", new TableField[] { SeasonLeagueTeam.SEASON_LEAGUE_TEAM.SEASON_YEAR }, true);
        public static final ForeignKey<SeasonLeagueTeamRecord, LeaguesRecord> FK_SEASON_LEAGUE_TEAM_LEAGUES = Internal.createForeignKey(Keys.KEY_LEAGUES_PRIMARY, SeasonLeagueTeam.SEASON_LEAGUE_TEAM, "FK_season_league_team_leagues", new TableField[] { SeasonLeagueTeam.SEASON_LEAGUE_TEAM.LEAGUE_NAME }, true);
        public static final ForeignKey<SeasonLeagueTeamRecord, TeamsRecord> FK_SEASON_LEAGUE_TEAM_TEAMS = Internal.createForeignKey(Keys.KEY_TEAMS_PRIMARY, SeasonLeagueTeam.SEASON_LEAGUE_TEAM, "FK_season_league_team_teams", new TableField[] { SeasonLeagueTeam.SEASON_LEAGUE_TEAM.TEAM_NAME }, true);
        public static final ForeignKey<SeasonsRecord, SchedulingpolicysRecord> FK__SCHEDULINGPOLICYS = Internal.createForeignKey(Keys.KEY_SCHEDULINGPOLICYS_PRIMARY, Seasons.SEASONS, "FK__schedulingpolicys", new TableField[] { Seasons.SEASONS.SCHEDULINGPOLICY }, true);
        public static final ForeignKey<SeasonsRecord, CalculationpolicysRecord> FK_SEASONS_CALCULATIONPOLICYS = Internal.createForeignKey(Keys.KEY_CALCULATIONPOLICYS_PRIMARY, Seasons.SEASONS, "FK_seasons_calculationpolicys", new TableField[] { Seasons.SEASONS.CALCULATIONPOLICY }, true);
        public static final ForeignKey<TeamOwnerApprovedTeamsRecord, FansRecord> FK_TEAM_OWNER_APPROVED_TEAMS_FANS = Internal.createForeignKey(Keys.KEY_FANS_PRIMARY, TeamOwnerApprovedTeams.TEAM_OWNER_APPROVED_TEAMS, "FK_team_owner_approved_teams_fans", new TableField[] { TeamOwnerApprovedTeams.TEAM_OWNER_APPROVED_TEAMS.TEAM_OWNER }, true);
        public static final ForeignKey<TeamOwnerRequestsRecord, FansRecord> FK_TEAMOWNER_REQUESTS_FANS = Internal.createForeignKey(Keys.KEY_FANS_PRIMARY, TeamOwnerRequests.TEAM_OWNER_REQUESTS, "FK_teamowner_requests_fans", new TableField[] { TeamOwnerRequests.TEAM_OWNER_REQUESTS.TEAM_OWNER }, true);
        public static final ForeignKey<TeamOwnerTeamsRecord, FansRecord> FK_TEAM_OWNER_TEAMS_FANS = Internal.createForeignKey(Keys.KEY_FANS_PRIMARY, TeamOwnerTeams.TEAM_OWNER_TEAMS, "FK_team_owner_teams_fans", new TableField[] { TeamOwnerTeams.TEAM_OWNER_TEAMS.TEAM_OWNER }, true);
        public static final ForeignKey<TeamOwnerTeamsRecord, TeamsRecord> FK_TEAM_OWNER_TEAMS_TEAMS = Internal.createForeignKey(Keys.KEY_TEAMS_PRIMARY, TeamOwnerTeams.TEAM_OWNER_TEAMS, "FK_team_owner_teams_teams", new TableField[] { TeamOwnerTeams.TEAM_OWNER_TEAMS.TEAM_NAME }, true);
        public static final ForeignKey<TeamrolesRecord, FansRecord> FK_TEAMROLES_FANS = Internal.createForeignKey(Keys.KEY_FANS_PRIMARY, Teamroles.TEAMROLES, "FK_teamroles_fans", new TableField[] { Teamroles.TEAMROLES.USERNAME }, true);
        public static final ForeignKey<TeamsRecord, FansRecord> FK_TEAMS_FANS_2 = Internal.createForeignKey(Keys.KEY_FANS_PRIMARY, Teams.TEAMS, "FK_teams_fans_2", new TableField[] { Teams.TEAMS.FOUNDER }, true);
        public static final ForeignKey<TeamsRecord, FansRecord> FK_TEAMS_FANS_3 = Internal.createForeignKey(Keys.KEY_FANS_PRIMARY, Teams.TEAMS, "FK_teams_fans_3", new TableField[] { Teams.TEAMS.COACH }, true);
        public static final ForeignKey<TeamsRecord, FieldsInSystemRecord> FK_TEAMS_FIELDS = Internal.createForeignKey(Keys.KEY_FIELDS_IN_SYSTEM_PRIMARY, Teams.TEAMS, "FK_teams_fields", new TableField[] { Teams.TEAMS.FIELD }, true);
    }
}
