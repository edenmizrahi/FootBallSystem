/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables;


import DB.Tables.FootballsystemDb;
import DB.Tables.Keys;
import DB.Tables.tables.records.RefereeSeasonLeagueRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RefereeSeasonLeague extends TableImpl<RefereeSeasonLeagueRecord> {

    private static final long serialVersionUID = 1311639133;

    /**
     * The reference instance of <code>footballsystem_db.referee_season_league</code>
     */
    public static final RefereeSeasonLeague REFEREE_SEASON_LEAGUE = new RefereeSeasonLeague();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RefereeSeasonLeagueRecord> getRecordType() {
        return RefereeSeasonLeagueRecord.class;
    }

    /**
     * The column <code>footballsystem_db.referee_season_league.referee</code>.
     */
    public final TableField<RefereeSeasonLeagueRecord, String> REFEREE = createField(DSL.name("referee"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>footballsystem_db.referee_season_league.season_year</code>.
     */
    public final TableField<RefereeSeasonLeagueRecord, String> SEASON_YEAR = createField(DSL.name("season_year"), org.jooq.impl.SQLDataType.VARCHAR(4).nullable(false).defaultValue(org.jooq.impl.DSL.field("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>footballsystem_db.referee_season_league.league_name</code>.
     */
    public final TableField<RefereeSeasonLeagueRecord, String> LEAGUE_NAME = createField(DSL.name("league_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * Create a <code>footballsystem_db.referee_season_league</code> table reference
     */
    public RefereeSeasonLeague() {
        this(DSL.name("referee_season_league"), null);
    }

    /**
     * Create an aliased <code>footballsystem_db.referee_season_league</code> table reference
     */
    public RefereeSeasonLeague(String alias) {
        this(DSL.name(alias), REFEREE_SEASON_LEAGUE);
    }

    /**
     * Create an aliased <code>footballsystem_db.referee_season_league</code> table reference
     */
    public RefereeSeasonLeague(Name alias) {
        this(alias, REFEREE_SEASON_LEAGUE);
    }

    private RefereeSeasonLeague(Name alias, Table<RefereeSeasonLeagueRecord> aliased) {
        this(alias, aliased, null);
    }

    private RefereeSeasonLeague(Name alias, Table<RefereeSeasonLeagueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> RefereeSeasonLeague(Table<O> child, ForeignKey<O, RefereeSeasonLeagueRecord> key) {
        super(child, key, REFEREE_SEASON_LEAGUE);
    }

    @Override
    public Schema getSchema() {
        return FootballsystemDb.FOOTBALLSYSTEM_DB;
    }

    @Override
    public UniqueKey<RefereeSeasonLeagueRecord> getPrimaryKey() {
        return Keys.KEY_REFEREE_SEASON_LEAGUE_PRIMARY;
    }

    @Override
    public List<UniqueKey<RefereeSeasonLeagueRecord>> getKeys() {
        return Arrays.<UniqueKey<RefereeSeasonLeagueRecord>>asList(Keys.KEY_REFEREE_SEASON_LEAGUE_PRIMARY);
    }

    @Override
    public List<ForeignKey<RefereeSeasonLeagueRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RefereeSeasonLeagueRecord, ?>>asList(Keys.FK_REFEREE_SEASON_LEAGUE_REFEREES, Keys.FK_REFEREE_SEASON_LEAGUE_SEASONS, Keys.FK_REFEREE_SEASON_LEAGUE_LEAGUES);
    }

    public Referees referees() {
        return new Referees(this, Keys.FK_REFEREE_SEASON_LEAGUE_REFEREES);
    }

    public Seasons seasons() {
        return new Seasons(this, Keys.FK_REFEREE_SEASON_LEAGUE_SEASONS);
    }

    public Leagues leagues() {
        return new Leagues(this, Keys.FK_REFEREE_SEASON_LEAGUE_LEAGUES);
    }

    @Override
    public RefereeSeasonLeague as(String alias) {
        return new RefereeSeasonLeague(DSL.name(alias), this);
    }

    @Override
    public RefereeSeasonLeague as(Name alias) {
        return new RefereeSeasonLeague(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RefereeSeasonLeague rename(String name) {
        return new RefereeSeasonLeague(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RefereeSeasonLeague rename(Name name) {
        return new RefereeSeasonLeague(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
