/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables.records;


import DB.Tables.tables.EventsTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsTimeRecord extends UpdatableRecordImpl<EventsTimeRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -21279256;

    /**
     * Setter for <code>footballsystem_db.events_time.event_id</code>.
     */
    public void setEventId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>footballsystem_db.events_time.event_id</code>.
     */
    public Integer getEventId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>footballsystem_db.events_time.extra_time</code>.
     */
    public void setExtraTime(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>footballsystem_db.events_time.extra_time</code>.
     */
    public Integer getExtraTime() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return EventsTime.EVENTS_TIME.EVENT_ID;
    }

    @Override
    public Field<Integer> field2() {
        return EventsTime.EVENTS_TIME.EXTRA_TIME;
    }

    @Override
    public Integer component1() {
        return getEventId();
    }

    @Override
    public Integer component2() {
        return getExtraTime();
    }

    @Override
    public Integer value1() {
        return getEventId();
    }

    @Override
    public Integer value2() {
        return getExtraTime();
    }

    @Override
    public EventsTimeRecord value1(Integer value) {
        setEventId(value);
        return this;
    }

    @Override
    public EventsTimeRecord value2(Integer value) {
        setExtraTime(value);
        return this;
    }

    @Override
    public EventsTimeRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventsTimeRecord
     */
    public EventsTimeRecord() {
        super(EventsTime.EVENTS_TIME);
    }

    /**
     * Create a detached, initialised EventsTimeRecord
     */
    public EventsTimeRecord(Integer eventId, Integer extraTime) {
        super(EventsTime.EVENTS_TIME);

        set(0, eventId);
        set(1, extraTime);
    }
}
