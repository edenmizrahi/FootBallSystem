/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables.records;


import DB.Tables.tables.Fans;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FansRecord extends UpdatableRecordImpl<FansRecord> implements Record7<String, String, String, String, String, LocalDate, Byte> {

    private static final long serialVersionUID = -196412522;

    /**
     * Setter for <code>footballsystem_db.fans.userName</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>footballsystem_db.fans.userName</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>footballsystem_db.fans.fullName</code>.
     */
    public void setFullname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>footballsystem_db.fans.fullName</code>.
     */
    public String getFullname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>footballsystem_db.fans.password_hash</code>.
     */
    public void setPasswordHash(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>footballsystem_db.fans.password_hash</code>.
     */
    public String getPasswordHash() {
        return (String) get(2);
    }

    /**
     * Setter for <code>footballsystem_db.fans.phoneNumber</code>.
     */
    public void setPhonenumber(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>footballsystem_db.fans.phoneNumber</code>.
     */
    public String getPhonenumber() {
        return (String) get(3);
    }

    /**
     * Setter for <code>footballsystem_db.fans.email</code>.
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>footballsystem_db.fans.email</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>footballsystem_db.fans.birthday</code>.
     */
    public void setBirthday(LocalDate value) {
        set(5, value);
    }

    /**
     * Getter for <code>footballsystem_db.fans.birthday</code>.
     */
    public LocalDate getBirthday() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>footballsystem_db.fans.to_email</code>.
     */
    public void setToEmail(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>footballsystem_db.fans.to_email</code>.
     */
    public Byte getToEmail() {
        return (Byte) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, LocalDate, Byte> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, String, LocalDate, Byte> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Fans.FANS.USERNAME;
    }

    @Override
    public Field<String> field2() {
        return Fans.FANS.FULLNAME;
    }

    @Override
    public Field<String> field3() {
        return Fans.FANS.PASSWORD_HASH;
    }

    @Override
    public Field<String> field4() {
        return Fans.FANS.PHONENUMBER;
    }

    @Override
    public Field<String> field5() {
        return Fans.FANS.EMAIL;
    }

    @Override
    public Field<LocalDate> field6() {
        return Fans.FANS.BIRTHDAY;
    }

    @Override
    public Field<Byte> field7() {
        return Fans.FANS.TO_EMAIL;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public String component2() {
        return getFullname();
    }

    @Override
    public String component3() {
        return getPasswordHash();
    }

    @Override
    public String component4() {
        return getPhonenumber();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public LocalDate component6() {
        return getBirthday();
    }

    @Override
    public Byte component7() {
        return getToEmail();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public String value2() {
        return getFullname();
    }

    @Override
    public String value3() {
        return getPasswordHash();
    }

    @Override
    public String value4() {
        return getPhonenumber();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public LocalDate value6() {
        return getBirthday();
    }

    @Override
    public Byte value7() {
        return getToEmail();
    }

    @Override
    public FansRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public FansRecord value2(String value) {
        setFullname(value);
        return this;
    }

    @Override
    public FansRecord value3(String value) {
        setPasswordHash(value);
        return this;
    }

    @Override
    public FansRecord value4(String value) {
        setPhonenumber(value);
        return this;
    }

    @Override
    public FansRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public FansRecord value6(LocalDate value) {
        setBirthday(value);
        return this;
    }

    @Override
    public FansRecord value7(Byte value) {
        setToEmail(value);
        return this;
    }

    @Override
    public FansRecord values(String value1, String value2, String value3, String value4, String value5, LocalDate value6, Byte value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FansRecord
     */
    public FansRecord() {
        super(Fans.FANS);
    }

    /**
     * Create a detached, initialised FansRecord
     */
    public FansRecord(String username, String fullname, String passwordHash, String phonenumber, String email, LocalDate birthday, Byte toEmail) {
        super(Fans.FANS);

        set(0, username);
        set(1, fullname);
        set(2, passwordHash);
        set(3, phonenumber);
        set(4, email);
        set(5, birthday);
        set(6, toEmail);
    }
}
