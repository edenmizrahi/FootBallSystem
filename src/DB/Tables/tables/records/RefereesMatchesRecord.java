/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables.records;


import DB.Tables.tables.RefereesMatches;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RefereesMatchesRecord extends UpdatableRecordImpl<RefereesMatchesRecord> implements Record4<LocalDateTime, String, String, String> {

    private static final long serialVersionUID = 301676518;

    /**
     * Setter for <code>footballsystem_db.referees_matches.matche_date</code>.
     */
    public void setMatcheDate(LocalDateTime value) {
        set(0, value);
    }

    /**
     * Getter for <code>footballsystem_db.referees_matches.matche_date</code>.
     */
    public LocalDateTime getMatcheDate() {
        return (LocalDateTime) get(0);
    }

    /**
     * Setter for <code>footballsystem_db.referees_matches.home_team</code>.
     */
    public void setHomeTeam(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>footballsystem_db.referees_matches.home_team</code>.
     */
    public String getHomeTeam() {
        return (String) get(1);
    }

    /**
     * Setter for <code>footballsystem_db.referees_matches.away_team</code>.
     */
    public void setAwayTeam(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>footballsystem_db.referees_matches.away_team</code>.
     */
    public String getAwayTeam() {
        return (String) get(2);
    }

    /**
     * Setter for <code>footballsystem_db.referees_matches.referee</code>.
     */
    public void setReferee(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>footballsystem_db.referees_matches.referee</code>.
     */
    public String getReferee() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record4<LocalDateTime, String, String, String> key() {
        return (Record4) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<LocalDateTime, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<LocalDateTime, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<LocalDateTime> field1() {
        return RefereesMatches.REFEREES_MATCHES.MATCHE_DATE;
    }

    @Override
    public Field<String> field2() {
        return RefereesMatches.REFEREES_MATCHES.HOME_TEAM;
    }

    @Override
    public Field<String> field3() {
        return RefereesMatches.REFEREES_MATCHES.AWAY_TEAM;
    }

    @Override
    public Field<String> field4() {
        return RefereesMatches.REFEREES_MATCHES.REFEREE;
    }

    @Override
    public LocalDateTime component1() {
        return getMatcheDate();
    }

    @Override
    public String component2() {
        return getHomeTeam();
    }

    @Override
    public String component3() {
        return getAwayTeam();
    }

    @Override
    public String component4() {
        return getReferee();
    }

    @Override
    public LocalDateTime value1() {
        return getMatcheDate();
    }

    @Override
    public String value2() {
        return getHomeTeam();
    }

    @Override
    public String value3() {
        return getAwayTeam();
    }

    @Override
    public String value4() {
        return getReferee();
    }

    @Override
    public RefereesMatchesRecord value1(LocalDateTime value) {
        setMatcheDate(value);
        return this;
    }

    @Override
    public RefereesMatchesRecord value2(String value) {
        setHomeTeam(value);
        return this;
    }

    @Override
    public RefereesMatchesRecord value3(String value) {
        setAwayTeam(value);
        return this;
    }

    @Override
    public RefereesMatchesRecord value4(String value) {
        setReferee(value);
        return this;
    }

    @Override
    public RefereesMatchesRecord values(LocalDateTime value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RefereesMatchesRecord
     */
    public RefereesMatchesRecord() {
        super(RefereesMatches.REFEREES_MATCHES);
    }

    /**
     * Create a detached, initialised RefereesMatchesRecord
     */
    public RefereesMatchesRecord(LocalDateTime matcheDate, String homeTeam, String awayTeam, String referee) {
        super(RefereesMatches.REFEREES_MATCHES);

        set(0, matcheDate);
        set(1, homeTeam);
        set(2, awayTeam);
        set(3, referee);
    }
}
