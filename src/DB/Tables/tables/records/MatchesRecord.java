/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables.records;


import DB.Tables.tables.Matches;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchesRecord extends TableRecordImpl<MatchesRecord> implements Record4<LocalDate, String, String, String> {

    private static final long serialVersionUID = -1456550107;

    /**
     * Setter for <code>footballsystem_db.matches.date</code>.
     */
    public void setDate(LocalDate value) {
        set(0, value);
    }

    /**
     * Getter for <code>footballsystem_db.matches.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(0);
    }

    /**
     * Setter for <code>footballsystem_db.matches.home_team</code>.
     */
    public void setHomeTeam(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>footballsystem_db.matches.home_team</code>.
     */
    public String getHomeTeam() {
        return (String) get(1);
    }

    /**
     * Setter for <code>footballsystem_db.matches.away_team</code>.
     */
    public void setAwayTeam(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>footballsystem_db.matches.away_team</code>.
     */
    public String getAwayTeam() {
        return (String) get(2);
    }

    /**
     * Setter for <code>footballsystem_db.matches.home_score</code>.
     */
    public void setHomeScore(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>footballsystem_db.matches.home_score</code>.
     */
    public String getHomeScore() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<LocalDate, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<LocalDate, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<LocalDate> field1() {
        return Matches.MATCHES.DATE;
    }

    @Override
    public Field<String> field2() {
        return Matches.MATCHES.HOME_TEAM;
    }

    @Override
    public Field<String> field3() {
        return Matches.MATCHES.AWAY_TEAM;
    }

    @Override
    public Field<String> field4() {
        return Matches.MATCHES.HOME_SCORE;
    }

    @Override
    public LocalDate component1() {
        return getDate();
    }

    @Override
    public String component2() {
        return getHomeTeam();
    }

    @Override
    public String component3() {
        return getAwayTeam();
    }

    @Override
    public String component4() {
        return getHomeScore();
    }

    @Override
    public LocalDate value1() {
        return getDate();
    }

    @Override
    public String value2() {
        return getHomeTeam();
    }

    @Override
    public String value3() {
        return getAwayTeam();
    }

    @Override
    public String value4() {
        return getHomeScore();
    }

    @Override
    public MatchesRecord value1(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public MatchesRecord value2(String value) {
        setHomeTeam(value);
        return this;
    }

    @Override
    public MatchesRecord value3(String value) {
        setAwayTeam(value);
        return this;
    }

    @Override
    public MatchesRecord value4(String value) {
        setHomeScore(value);
        return this;
    }

    @Override
    public MatchesRecord values(LocalDate value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MatchesRecord
     */
    public MatchesRecord() {
        super(Matches.MATCHES);
    }

    /**
     * Create a detached, initialised MatchesRecord
     */
    public MatchesRecord(LocalDate date, String homeTeam, String awayTeam, String homeScore) {
        super(Matches.MATCHES);

        set(0, date);
        set(1, homeTeam);
        set(2, awayTeam);
        set(3, homeScore);
    }
}
