/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables.records;


import DB.Tables.tables.FanNotification;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FanNotificationRecord extends TableRecordImpl<FanNotificationRecord> implements Record6<LocalDate, String, String, String, Integer, Byte> {

    private static final long serialVersionUID = 2005793810;

    /**
     * Setter for <code>footballsystem_db.fan-notification.match_date</code>.
     */
    public void setMatchDate(LocalDate value) {
        set(0, value);
    }

    /**
     * Getter for <code>footballsystem_db.fan-notification.match_date</code>.
     */
    public LocalDate getMatchDate() {
        return (LocalDate) get(0);
    }

    /**
     * Setter for <code>footballsystem_db.fan-notification.home_team</code>.
     */
    public void setHomeTeam(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>footballsystem_db.fan-notification.home_team</code>.
     */
    public String getHomeTeam() {
        return (String) get(1);
    }

    /**
     * Setter for <code>footballsystem_db.fan-notification.away_team</code>.
     */
    public void setAwayTeam(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>footballsystem_db.fan-notification.away_team</code>.
     */
    public String getAwayTeam() {
        return (String) get(2);
    }

    /**
     * Setter for <code>footballsystem_db.fan-notification.userName</code>.
     */
    public void setUsername(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>footballsystem_db.fan-notification.userName</code>.
     */
    public String getUsername() {
        return (String) get(3);
    }

    /**
     * Setter for <code>footballsystem_db.fan-notification.event_id</code>.
     */
    public void setEventId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>footballsystem_db.fan-notification.event_id</code>.
     */
    public Integer getEventId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>footballsystem_db.fan-notification.read</code>.
     */
    public void setRead(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>footballsystem_db.fan-notification.read</code>.
     */
    public Byte getRead() {
        return (Byte) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<LocalDate, String, String, String, Integer, Byte> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<LocalDate, String, String, String, Integer, Byte> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<LocalDate> field1() {
        return FanNotification.FAN_NOTIFICATION.MATCH_DATE;
    }

    @Override
    public Field<String> field2() {
        return FanNotification.FAN_NOTIFICATION.HOME_TEAM;
    }

    @Override
    public Field<String> field3() {
        return FanNotification.FAN_NOTIFICATION.AWAY_TEAM;
    }

    @Override
    public Field<String> field4() {
        return FanNotification.FAN_NOTIFICATION.USERNAME;
    }

    @Override
    public Field<Integer> field5() {
        return FanNotification.FAN_NOTIFICATION.EVENT_ID;
    }

    @Override
    public Field<Byte> field6() {
        return FanNotification.FAN_NOTIFICATION.READ;
    }

    @Override
    public LocalDate component1() {
        return getMatchDate();
    }

    @Override
    public String component2() {
        return getHomeTeam();
    }

    @Override
    public String component3() {
        return getAwayTeam();
    }

    @Override
    public String component4() {
        return getUsername();
    }

    @Override
    public Integer component5() {
        return getEventId();
    }

    @Override
    public Byte component6() {
        return getRead();
    }

    @Override
    public LocalDate value1() {
        return getMatchDate();
    }

    @Override
    public String value2() {
        return getHomeTeam();
    }

    @Override
    public String value3() {
        return getAwayTeam();
    }

    @Override
    public String value4() {
        return getUsername();
    }

    @Override
    public Integer value5() {
        return getEventId();
    }

    @Override
    public Byte value6() {
        return getRead();
    }

    @Override
    public FanNotificationRecord value1(LocalDate value) {
        setMatchDate(value);
        return this;
    }

    @Override
    public FanNotificationRecord value2(String value) {
        setHomeTeam(value);
        return this;
    }

    @Override
    public FanNotificationRecord value3(String value) {
        setAwayTeam(value);
        return this;
    }

    @Override
    public FanNotificationRecord value4(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public FanNotificationRecord value5(Integer value) {
        setEventId(value);
        return this;
    }

    @Override
    public FanNotificationRecord value6(Byte value) {
        setRead(value);
        return this;
    }

    @Override
    public FanNotificationRecord values(LocalDate value1, String value2, String value3, String value4, Integer value5, Byte value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FanNotificationRecord
     */
    public FanNotificationRecord() {
        super(FanNotification.FAN_NOTIFICATION);
    }

    /**
     * Create a detached, initialised FanNotificationRecord
     */
    public FanNotificationRecord(LocalDate matchDate, String homeTeam, String awayTeam, String username, Integer eventId, Byte read) {
        super(FanNotification.FAN_NOTIFICATION);

        set(0, matchDate);
        set(1, homeTeam);
        set(2, awayTeam);
        set(3, username);
        set(4, eventId);
        set(5, read);
    }
}
