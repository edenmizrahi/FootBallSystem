/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables.records;


import DB.Tables.tables.EventsTwoPlayers;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsTwoPlayersRecord extends UpdatableRecordImpl<EventsTwoPlayersRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 877211603;

    /**
     * Setter for <code>footballsystem_db.events_two_players.event_id</code>.
     */
    public void setEventId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>footballsystem_db.events_two_players.event_id</code>.
     */
    public Integer getEventId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>footballsystem_db.events_two_players.player1</code>.
     */
    public void setPlayer1(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>footballsystem_db.events_two_players.player1</code>.
     */
    public String getPlayer1() {
        return (String) get(1);
    }

    /**
     * Setter for <code>footballsystem_db.events_two_players.player2</code>.
     */
    public void setPlayer2(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>footballsystem_db.events_two_players.player2</code>.
     */
    public String getPlayer2() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return EventsTwoPlayers.EVENTS_TWO_PLAYERS.EVENT_ID;
    }

    @Override
    public Field<String> field2() {
        return EventsTwoPlayers.EVENTS_TWO_PLAYERS.PLAYER1;
    }

    @Override
    public Field<String> field3() {
        return EventsTwoPlayers.EVENTS_TWO_PLAYERS.PLAYER2;
    }

    @Override
    public Integer component1() {
        return getEventId();
    }

    @Override
    public String component2() {
        return getPlayer1();
    }

    @Override
    public String component3() {
        return getPlayer2();
    }

    @Override
    public Integer value1() {
        return getEventId();
    }

    @Override
    public String value2() {
        return getPlayer1();
    }

    @Override
    public String value3() {
        return getPlayer2();
    }

    @Override
    public EventsTwoPlayersRecord value1(Integer value) {
        setEventId(value);
        return this;
    }

    @Override
    public EventsTwoPlayersRecord value2(String value) {
        setPlayer1(value);
        return this;
    }

    @Override
    public EventsTwoPlayersRecord value3(String value) {
        setPlayer2(value);
        return this;
    }

    @Override
    public EventsTwoPlayersRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventsTwoPlayersRecord
     */
    public EventsTwoPlayersRecord() {
        super(EventsTwoPlayers.EVENTS_TWO_PLAYERS);
    }

    /**
     * Create a detached, initialised EventsTwoPlayersRecord
     */
    public EventsTwoPlayersRecord(Integer eventId, String player1, String player2) {
        super(EventsTwoPlayers.EVENTS_TWO_PLAYERS);

        set(0, eventId);
        set(1, player1);
        set(2, player2);
    }
}
