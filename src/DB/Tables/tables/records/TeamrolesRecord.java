/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables.records;


import DB.Tables.tables.Teamroles;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeamrolesRecord extends UpdatableRecordImpl<TeamrolesRecord> implements Record5<String, Byte, Byte, Byte, Byte> {

    private static final long serialVersionUID = -1375701668;

    /**
     * Setter for <code>footballsystem_db.teamroles.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>footballsystem_db.teamroles.username</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>footballsystem_db.teamroles.player</code>.
     */
    public void setPlayer(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>footballsystem_db.teamroles.player</code>.
     */
    public Byte getPlayer() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>footballsystem_db.teamroles.coach</code>.
     */
    public void setCoach(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>footballsystem_db.teamroles.coach</code>.
     */
    public Byte getCoach() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>footballsystem_db.teamroles.team Owner</code>.
     */
    public void setTeamOwner(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>footballsystem_db.teamroles.team Owner</code>.
     */
    public Byte getTeamOwner() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>footballsystem_db.teamroles.team Manager</code>.
     */
    public void setTeamManager(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>footballsystem_db.teamroles.team Manager</code>.
     */
    public Byte getTeamManager() {
        return (Byte) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, Byte, Byte, Byte, Byte> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, Byte, Byte, Byte, Byte> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Teamroles.TEAMROLES.USERNAME;
    }

    @Override
    public Field<Byte> field2() {
        return Teamroles.TEAMROLES.PLAYER;
    }

    @Override
    public Field<Byte> field3() {
        return Teamroles.TEAMROLES.COACH;
    }

    @Override
    public Field<Byte> field4() {
        return Teamroles.TEAMROLES.TEAM_OWNER;
    }

    @Override
    public Field<Byte> field5() {
        return Teamroles.TEAMROLES.TEAM_MANAGER;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public Byte component2() {
        return getPlayer();
    }

    @Override
    public Byte component3() {
        return getCoach();
    }

    @Override
    public Byte component4() {
        return getTeamOwner();
    }

    @Override
    public Byte component5() {
        return getTeamManager();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public Byte value2() {
        return getPlayer();
    }

    @Override
    public Byte value3() {
        return getCoach();
    }

    @Override
    public Byte value4() {
        return getTeamOwner();
    }

    @Override
    public Byte value5() {
        return getTeamManager();
    }

    @Override
    public TeamrolesRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public TeamrolesRecord value2(Byte value) {
        setPlayer(value);
        return this;
    }

    @Override
    public TeamrolesRecord value3(Byte value) {
        setCoach(value);
        return this;
    }

    @Override
    public TeamrolesRecord value4(Byte value) {
        setTeamOwner(value);
        return this;
    }

    @Override
    public TeamrolesRecord value5(Byte value) {
        setTeamManager(value);
        return this;
    }

    @Override
    public TeamrolesRecord values(String value1, Byte value2, Byte value3, Byte value4, Byte value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeamrolesRecord
     */
    public TeamrolesRecord() {
        super(Teamroles.TEAMROLES);
    }

    /**
     * Create a detached, initialised TeamrolesRecord
     */
    public TeamrolesRecord(String username, Byte player, Byte coach, Byte teamOwner, Byte teamManager) {
        super(Teamroles.TEAMROLES);

        set(0, username);
        set(1, player);
        set(2, coach);
        set(3, teamOwner);
        set(4, teamManager);
    }
}
