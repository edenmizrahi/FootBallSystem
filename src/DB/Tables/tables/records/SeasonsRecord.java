/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables.records;


import DB.Tables.tables.Seasons;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeasonsRecord extends UpdatableRecordImpl<SeasonsRecord> implements Record4<String, String, String, Byte> {

    private static final long serialVersionUID = -1275802672;

    /**
     * Setter for <code>footballsystem_db.seasons.year</code>.
     */
    public void setYear(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>footballsystem_db.seasons.year</code>.
     */
    public String getYear() {
        return (String) get(0);
    }

    /**
     * Setter for <code>footballsystem_db.seasons.schedulingPolicy</code>.
     */
    public void setSchedulingpolicy(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>footballsystem_db.seasons.schedulingPolicy</code>.
     */
    public String getSchedulingpolicy() {
        return (String) get(1);
    }

    /**
     * Setter for <code>footballsystem_db.seasons.calculationPolicy</code>.
     */
    public void setCalculationpolicy(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>footballsystem_db.seasons.calculationPolicy</code>.
     */
    public String getCalculationpolicy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>footballsystem_db.seasons.current_season</code>.
     */
    public void setCurrentSeason(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>footballsystem_db.seasons.current_season</code>.
     */
    public Byte getCurrentSeason() {
        return (Byte) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, Byte> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, Byte> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Seasons.SEASONS.YEAR;
    }

    @Override
    public Field<String> field2() {
        return Seasons.SEASONS.SCHEDULINGPOLICY;
    }

    @Override
    public Field<String> field3() {
        return Seasons.SEASONS.CALCULATIONPOLICY;
    }

    @Override
    public Field<Byte> field4() {
        return Seasons.SEASONS.CURRENT_SEASON;
    }

    @Override
    public String component1() {
        return getYear();
    }

    @Override
    public String component2() {
        return getSchedulingpolicy();
    }

    @Override
    public String component3() {
        return getCalculationpolicy();
    }

    @Override
    public Byte component4() {
        return getCurrentSeason();
    }

    @Override
    public String value1() {
        return getYear();
    }

    @Override
    public String value2() {
        return getSchedulingpolicy();
    }

    @Override
    public String value3() {
        return getCalculationpolicy();
    }

    @Override
    public Byte value4() {
        return getCurrentSeason();
    }

    @Override
    public SeasonsRecord value1(String value) {
        setYear(value);
        return this;
    }

    @Override
    public SeasonsRecord value2(String value) {
        setSchedulingpolicy(value);
        return this;
    }

    @Override
    public SeasonsRecord value3(String value) {
        setCalculationpolicy(value);
        return this;
    }

    @Override
    public SeasonsRecord value4(Byte value) {
        setCurrentSeason(value);
        return this;
    }

    @Override
    public SeasonsRecord values(String value1, String value2, String value3, Byte value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SeasonsRecord
     */
    public SeasonsRecord() {
        super(Seasons.SEASONS);
    }

    /**
     * Create a detached, initialised SeasonsRecord
     */
    public SeasonsRecord(String year, String schedulingpolicy, String calculationpolicy, Byte currentSeason) {
        super(Seasons.SEASONS);

        set(0, year);
        set(1, schedulingpolicy);
        set(2, calculationpolicy);
        set(3, currentSeason);
    }
}
