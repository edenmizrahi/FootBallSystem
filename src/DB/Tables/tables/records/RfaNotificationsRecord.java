/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables.records;


import DB.Tables.tables.RfaNotifications;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RfaNotificationsRecord extends UpdatableRecordImpl<RfaNotificationsRecord> implements Record3<String, String, Byte> {

    private static final long serialVersionUID = -352815848;

    /**
     * Setter for <code>footballsystem_db.rfa_notifications.team_name</code>.
     */
    public void setTeamName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>footballsystem_db.rfa_notifications.team_name</code>.
     */
    public String getTeamName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>footballsystem_db.rfa_notifications.notification_content</code>.
     */
    public void setNotificationContent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>footballsystem_db.rfa_notifications.notification_content</code>.
     */
    public String getNotificationContent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>footballsystem_db.rfa_notifications.read</code>.
     */
    public void setRead(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>footballsystem_db.rfa_notifications.read</code>.
     */
    public Byte getRead() {
        return (Byte) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Byte> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Byte> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RfaNotifications.RFA_NOTIFICATIONS.TEAM_NAME;
    }

    @Override
    public Field<String> field2() {
        return RfaNotifications.RFA_NOTIFICATIONS.NOTIFICATION_CONTENT;
    }

    @Override
    public Field<Byte> field3() {
        return RfaNotifications.RFA_NOTIFICATIONS.READ;
    }

    @Override
    public String component1() {
        return getTeamName();
    }

    @Override
    public String component2() {
        return getNotificationContent();
    }

    @Override
    public Byte component3() {
        return getRead();
    }

    @Override
    public String value1() {
        return getTeamName();
    }

    @Override
    public String value2() {
        return getNotificationContent();
    }

    @Override
    public Byte value3() {
        return getRead();
    }

    @Override
    public RfaNotificationsRecord value1(String value) {
        setTeamName(value);
        return this;
    }

    @Override
    public RfaNotificationsRecord value2(String value) {
        setNotificationContent(value);
        return this;
    }

    @Override
    public RfaNotificationsRecord value3(Byte value) {
        setRead(value);
        return this;
    }

    @Override
    public RfaNotificationsRecord values(String value1, String value2, Byte value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RfaNotificationsRecord
     */
    public RfaNotificationsRecord() {
        super(RfaNotifications.RFA_NOTIFICATIONS);
    }

    /**
     * Create a detached, initialised RfaNotificationsRecord
     */
    public RfaNotificationsRecord(String teamName, String notificationContent, Byte read) {
        super(RfaNotifications.RFA_NOTIFICATIONS);

        set(0, teamName);
        set(1, notificationContent);
        set(2, read);
    }
}
