/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables;


import DB.Tables.FootballsystemDb;
import DB.Tables.Keys;
import DB.Tables.tables.records.SeasonLeagueTeamRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeasonLeagueTeam extends TableImpl<SeasonLeagueTeamRecord> {

    private static final long serialVersionUID = -1893635503;

    /**
     * The reference instance of <code>footballsystem_db.season_league_team</code>
     */
    public static final SeasonLeagueTeam SEASON_LEAGUE_TEAM = new SeasonLeagueTeam();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SeasonLeagueTeamRecord> getRecordType() {
        return SeasonLeagueTeamRecord.class;
    }

    /**
     * The column <code>footballsystem_db.season_league_team.season_year</code>.
     */
    public final TableField<SeasonLeagueTeamRecord, String> SEASON_YEAR = createField(DSL.name("season_year"), org.jooq.impl.SQLDataType.VARCHAR(4).nullable(false).defaultValue(org.jooq.impl.DSL.field("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>footballsystem_db.season_league_team.league_name</code>.
     */
    public final TableField<SeasonLeagueTeamRecord, String> LEAGUE_NAME = createField(DSL.name("league_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>footballsystem_db.season_league_team.team_name</code>.
     */
    public final TableField<SeasonLeagueTeamRecord, String> TEAM_NAME = createField(DSL.name("team_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * Create a <code>footballsystem_db.season_league_team</code> table reference
     */
    public SeasonLeagueTeam() {
        this(DSL.name("season_league_team"), null);
    }

    /**
     * Create an aliased <code>footballsystem_db.season_league_team</code> table reference
     */
    public SeasonLeagueTeam(String alias) {
        this(DSL.name(alias), SEASON_LEAGUE_TEAM);
    }

    /**
     * Create an aliased <code>footballsystem_db.season_league_team</code> table reference
     */
    public SeasonLeagueTeam(Name alias) {
        this(alias, SEASON_LEAGUE_TEAM);
    }

    private SeasonLeagueTeam(Name alias, Table<SeasonLeagueTeamRecord> aliased) {
        this(alias, aliased, null);
    }

    private SeasonLeagueTeam(Name alias, Table<SeasonLeagueTeamRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SeasonLeagueTeam(Table<O> child, ForeignKey<O, SeasonLeagueTeamRecord> key) {
        super(child, key, SEASON_LEAGUE_TEAM);
    }

    @Override
    public Schema getSchema() {
        return FootballsystemDb.FOOTBALLSYSTEM_DB;
    }

    @Override
    public UniqueKey<SeasonLeagueTeamRecord> getPrimaryKey() {
        return Keys.KEY_SEASON_LEAGUE_TEAM_PRIMARY;
    }

    @Override
    public List<UniqueKey<SeasonLeagueTeamRecord>> getKeys() {
        return Arrays.<UniqueKey<SeasonLeagueTeamRecord>>asList(Keys.KEY_SEASON_LEAGUE_TEAM_PRIMARY);
    }

    @Override
    public List<ForeignKey<SeasonLeagueTeamRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SeasonLeagueTeamRecord, ?>>asList(Keys.FK_SEASON_LEAGUE_TEAM_SEASONS, Keys.FK_SEASON_LEAGUE_TEAM_LEAGUES, Keys.FK_SEASON_LEAGUE_TEAM_TEAMS);
    }

    public Seasons seasons() {
        return new Seasons(this, Keys.FK_SEASON_LEAGUE_TEAM_SEASONS);
    }

    public Leagues leagues() {
        return new Leagues(this, Keys.FK_SEASON_LEAGUE_TEAM_LEAGUES);
    }

    public Teams teams() {
        return new Teams(this, Keys.FK_SEASON_LEAGUE_TEAM_TEAMS);
    }

    @Override
    public SeasonLeagueTeam as(String alias) {
        return new SeasonLeagueTeam(DSL.name(alias), this);
    }

    @Override
    public SeasonLeagueTeam as(Name alias) {
        return new SeasonLeagueTeam(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SeasonLeagueTeam rename(String name) {
        return new SeasonLeagueTeam(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SeasonLeagueTeam rename(Name name) {
        return new SeasonLeagueTeam(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
