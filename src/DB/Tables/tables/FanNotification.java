/*
 * This file is generated by jOOQ.
 */
package DB.Tables.tables;


import DB.Tables.FootballsystemDb;
import DB.Tables.tables.records.FanNotificationRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FanNotification extends TableImpl<FanNotificationRecord> {

    private static final long serialVersionUID = 936917723;

    /**
     * The reference instance of <code>footballsystem_db.fan_notification</code>
     */
    public static final FanNotification FAN_NOTIFICATION = new FanNotification();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FanNotificationRecord> getRecordType() {
        return FanNotificationRecord.class;
    }

    /**
     * Create a <code>footballsystem_db.fan_notification</code> table reference
     */
    public FanNotification() {
        this(DSL.name("fan_notification"), null);
    }

    /**
     * Create an aliased <code>footballsystem_db.fan_notification</code> table reference
     */
    public FanNotification(String alias) {
        this(DSL.name(alias), FAN_NOTIFICATION);
    }

    /**
     * Create an aliased <code>footballsystem_db.fan_notification</code> table reference
     */
    public FanNotification(Name alias) {
        this(alias, FAN_NOTIFICATION);
    }

    private FanNotification(Name alias, Table<FanNotificationRecord> aliased) {
        this(alias, aliased, null);
    }

    private FanNotification(Name alias, Table<FanNotificationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> FanNotification(Table<O> child, ForeignKey<O, FanNotificationRecord> key) {
        super(child, key, FAN_NOTIFICATION);
    }

    @Override
    public Schema getSchema() {
        return FootballsystemDb.FOOTBALLSYSTEM_DB;
    }

    @Override
    public FanNotification as(String alias) {
        return new FanNotification(DSL.name(alias), this);
    }

    @Override
    public FanNotification as(Name alias) {
        return new FanNotification(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FanNotification rename(String name) {
        return new FanNotification(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FanNotification rename(Name name) {
        return new FanNotification(name, null);
    }
}
